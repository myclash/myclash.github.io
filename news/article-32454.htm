<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://myclash.github.io/news/article-32454.htm" />
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>大数据学习之初学者必知的十大机器学习算法</title>
        <meta name="description" content="本文转载自科多大数据，大数据学习都要接触到算法。 本文先为初学者介绍了必知的十大机器学习（ML）算法，并且我们通过一些图解和实例生动地解释这些基本机器学习的概念。我们希望本文能为理解机器学习基本算法提" />
        <link rel="icon" href="/assets/website/img/myclash/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Place favicon.ico in the root directory -->
    <!-- ========================= CSS here ========================= -->
    <link rel="stylesheet" href="/assets/website/css/myclash/bootstrap-5.0.0-alpha-2.min.css" />
    <link rel="stylesheet" href="/assets/website/css/myclash/LineIcons.2.0.css" />
    <link rel="stylesheet" href="/assets/website/css/myclash/animate.css" />
    <link rel="stylesheet" href="/assets/website/css/myclash/tiny-slider.css" />
    <link rel="stylesheet" href="/assets/website/css/myclash/glightbox.min.css" />
    <link rel="stylesheet" href="/assets/website/css/myclash/lindy-uikit.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JV5DZ5QQPV"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JV5DZ5QQPV');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--[if lte IE 9]>
      <p class="browserupgrade">
        You are using an <strong>outdated</strong> browser. Please
        <a href="https://browsehappy.com/">upgrade your browser</a> to improve
        your experience and security.
      </p>
    <![endif]-->
    <!-- ========================= preloader start ========================= -->
    <div class="preloader">
        <div class="loader">
            <div class="spinner">
                <div class="spinner-container">
                    <div class="spinner-rotator">
                        <div class="spinner-left">
                            <div class="spinner-circle"></div>
                        </div>
                        <div class="spinner-right">
                            <div class="spinner-circle"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- ========================= preloader end ========================= -->
    <!-- ========================= hero-section-wrapper-2 start ========================= -->
    <section id="home" class="hero-section-wrapper-2 list">
                <!-- ========================= header-2 start ========================= -->
        <header class="header header-2">
            <div class="navbar-area">
                <div class="container">
                    <div class="row align-items-center">
                        <div class="col-lg-12">
                            <nav class="navbar navbar-expand-lg">
                                <a class="navbar-brand" href="/">
                                    My Clash
                                </a>
                                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent2" aria-controls="navbarSupportedContent2" aria-expanded="false" aria-label="Toggle navigation">
                                    <span class="toggler-icon"></span>
                                    <span class="toggler-icon"></span>
                                    <span class="toggler-icon"></span>
                                </button>
                                <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent2">
                                    <ul id="nav2" class="navbar-nav ml-auto">
                                                                                <li class="nav-item">
                                            <a href="/">首页</a>
                                        </li>
                                                                                <li class="nav-item">
                                            <a href="/free-nodes/">免费节点</a>
                                        </li>
                                                                                <li class="nav-item">
                                            <a href="/paid-subscribe/">推荐机场</a>
                                        </li>
                                                                                <li class="nav-item">
                                            <a href="/news/">新闻资讯</a>
                                        </li>
                                                                                <li class="nav-item">
                                            <a href="#">关于</a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#">联系</a>
                                        </li>
                                    </ul>
                                </div>
                                <!-- navbar collapse -->
                            </nav>
                            <!-- navbar -->
                        </div>
                    </div>
                    <!-- row -->
                </div>
                <!-- container -->
            </div>
            <!-- navbar area -->
        </header>
        <!-- ========================= header-2 end ========================= -->
        <!-- ========================= hero-2 start ========================= -->
        <div class="hero-section hero-style-2">
            <div class="container">
                <div class="row align-items-end">
                    <div class="col-lg-6">
                        <div class="hero-content-wrapper">
                            <h1 class="mb-30 wow fadeInUp" data-wow-delay=".4s">大数据学习之初学者必知的十大机器学习算法</h1>
                            <p class="mb-50 wow fadeInUp" data-wow-delay=".6s">
                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                            </p>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="hero-image">
                            <img href="/assets/website/img/myclash/hero/hero-2/hero-img.svg" alt="" class="wow fadeInRight" data-wow-delay=".2s">
                            <img href="/assets/website/img/myclash/hero/hero-2/paattern.svg" alt="" class="shape shape-1">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- ========================= hero-2 end ========================= -->
    </section>
    <!-- ========================= hero-section-wrapper-2 end ========================= -->
    <!-- ========================= about style-3 start ========================= -->
    <section id="about" class="about-section about-style-3">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p style="margin-left:0cm;">本文转载自科多大数据，大数据学习都要接触到算法。</p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">本文先为初学者介绍了必知的十大机器学习（</span><span style="color:#2f2f2f;">ML</span><span style="color:#2f2f2f;">）算法，并且我们通过一些图解和实例生动地解释这些基本机器学习的概念。我们希望本文能为理解机器学习基本算法提供简单易读的入门概念。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#f6360e;">机器学习模型</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">在《哈佛商业评论》发表「数据科学家是</span><span style="color:#2f2f2f;"> 21 </span><span style="color:#2f2f2f;">世纪最性感的职业」之后，机器学习的研究广受关注。所以，对于初入机器学习领域的学习者，我们放出来一篇颇受欢迎的博文</span><span style="color:#2f2f2f;">——</span><span style="color:#2f2f2f;">《初学者必知的十大机器学习算法》，尽管这只是针对初学者的。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">机器学习算法就是在没有人类干预的情况下，从数据中学习，并在经验中改善的一种方法，学习任务可能包括学习从输入映射到输出的函数，学习无标签数据的隐含结构；或者是「基于实例的学习」，通过与存储在记忆中的训练数据做比较，给一个新实例生成一个类别标签。基于实例的学习（</span><span style="color:#2f2f2f;">instance-based learning</span><span style="color:#2f2f2f;">）不会从具体实例中生成抽象结果。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#f6360e;">机器学习算法的类型</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">有三类机器学习算法：</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">可以这样来描述监督学习：使用有标签的训练数据去学习从输入变量（</span><span style="color:#2f2f2f;">X</span><span style="color:#2f2f2f;">）到输出变量（</span><span style="color:#2f2f2f;">Y</span><span style="color:#2f2f2f;">）的映射函数。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">Y = f (X)</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">它分为两种类型：</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">a. </span><span style="color:#2f2f2f;">分类：通过一个给定的输入预测一个输出，这里的输出变量以类别的形式展示。例如男女性别、疾病和健康。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">b. </span><span style="color:#2f2f2f;">回归：也是通过一个给定的输入预测一个输出，这里的输出变量以实数的形式展示。例如预测降雨量、人的身高等实数值。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">本文介绍的前</span><span style="color:#2f2f2f;"> 5 </span><span style="color:#2f2f2f;">个算法就属于监督学习：线性回归、</span><span style="color:#2f2f2f;">Logistic </span><span style="color:#2f2f2f;">回归、</span><span style="color:#2f2f2f;">CART</span><span style="color:#2f2f2f;">、朴素贝叶斯和</span><span style="color:#2f2f2f;"> KNN</span><span style="color:#2f2f2f;">。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">集成学习也是一种监督学习方法。它意味着结合多种不同的弱学习模型来预测一个新样本。本文介绍的第</span><span style="color:#2f2f2f;"> 9</span><span style="color:#2f2f2f;">、</span><span style="color:#2f2f2f;">10 </span><span style="color:#2f2f2f;">两种算法</span><span style="color:#2f2f2f;">–</span><span style="color:#2f2f2f;">随机森林</span><span style="color:#2f2f2f;"> Bagging </span><span style="color:#2f2f2f;">和</span><span style="color:#2f2f2f;"> AdaBoost </span><span style="color:#2f2f2f;">提升算法就是集成学习技术。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">非监督学习问提仅仅处理输入变量（</span><span style="color:#2f2f2f;">X</span><span style="color:#2f2f2f;">），但不会处理对应的输出（也就是说，没有标签）。它使用无标签的训练数据建模数据的潜在结构。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">非监督学习可以分为</span><span style="color:#2f2f2f;"> 2 </span><span style="color:#2f2f2f;">种类型：</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">a. </span><span style="color:#2f2f2f;">关联：就是去发觉在同一个数据集合中不同条目同时发生的概率。广泛地用于市场篮子分析。例如：如果一位顾客买了面包，那么他有</span><span style="color:#2f2f2f;"> 80% </span><span style="color:#2f2f2f;">的可能性购买鸡蛋。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">b. </span><span style="color:#2f2f2f;">聚类：把更加相似的对象归为一类，而不是其他类别对象。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">c. </span><span style="color:#2f2f2f;">降维：顾名思义，降维就是减少数据集变量，同时要保证重要信息不丢失。降维可以通过使用特征提取和特征选择方法来完成。特征选择方法会选择原始变量的一个子集。特征提取完成了从高维空间到低维空间的数据变换。例如，主成分分析（</span><span style="color:#2f2f2f;">PCA</span><span style="color:#2f2f2f;">）就是一个特征提取方法。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">本文介绍的算法</span><span style="color:#2f2f2f;"> 6-8 </span><span style="color:#2f2f2f;">都是非监督学习的例子：包括</span><span style="color:#2f2f2f;"> Apriori </span><span style="color:#2f2f2f;">算法、</span><span style="color:#2f2f2f;">K-</span><span style="color:#2f2f2f;">均值聚类、主成分分析（</span><span style="color:#2f2f2f;">PCA</span><span style="color:#2f2f2f;">）。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">强化学习是这样一种学习方法，它允许智能体通过学习最大化奖励的行为，并基于当前状态决定下一步要采取的最佳行动。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">强化学习一般通过试错学习到最佳行动。强化学习应用于机器人，机器人在碰到障碍物质之后会收到消极反馈，它通过这些消极反馈来学会避免碰撞；也用在视频游戏中，通过试错发现能够极大增长玩家回报的一系列动作。智能体可以使用这些回报来理解游戏中的最佳状态，并选择下一步的行动</span></p> <p style="margin-left:0cm;"><strong><span style="color:#f6360e;">监督学习</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">在机器学习中，我们用输入变量</span><span style="color:#2f2f2f;"> x </span><span style="color:#2f2f2f;">来决定输出变量</span><span style="color:#2f2f2f;"> y</span><span style="color:#2f2f2f;">。输入变量和输出变量之间存在一个关系。机器学习的目标就是去定量地描述这种关系。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">线性回归预测是连续值（如厘米级的降雨量），</span><span style="color:#2f2f2f;">logistic </span><span style="color:#2f2f2f;">回归预测是使用了一种变换函数之后得到的离散值（如一位学生是否通过了考试）。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">Logistic </span><span style="color:#2f2f2f;">回归最适合于二元分类问题（在一个数据集中，</span><span style="color:#2f2f2f;">y=0 </span><span style="color:#2f2f2f;">或者</span><span style="color:#2f2f2f;"> 1</span><span style="color:#2f2f2f;">，</span><span style="color:#2f2f2f;">1 </span><span style="color:#2f2f2f;">代表默认类。例如：在预测某个事件是否会发生的时候，发生就是</span><span style="color:#2f2f2f;"> 1</span><span style="color:#2f2f2f;">。在预测某个人是否患病时，患病就是</span><span style="color:#2f2f2f;"> 1</span><span style="color:#2f2f2f;">）。这个算法是拿它所使用的变换函数命名的，这个函数称为</span><span style="color:#2f2f2f;"> logistics </span><span style="color:#2f2f2f;">函数（</span><span style="color:#2f2f2f;">logistics function</span><span style="color:#2f2f2f;">，</span><span style="color:#2f2f2f;">h(x)= 1/ (1 + e^x)</span><span style="color:#2f2f2f;">），它的图像是一个</span><span style="color:#2f2f2f;"> S </span><span style="color:#2f2f2f;">形曲线。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">在</span><span style="color:#2f2f2f;"> logistic </span><span style="color:#2f2f2f;">回归中，输出是默认类别的概率（不像线性回归一样，输出是直接生成的）。因为是概率，所以输出的值域是</span><span style="color:#2f2f2f;"> [0,1]</span><span style="color:#2f2f2f;">。输出值</span><span style="color:#2f2f2f;"> y </span><span style="color:#2f2f2f;">是通过输入值</span><span style="color:#2f2f2f;"> x </span><span style="color:#2f2f2f;">的对数变换</span><span style="color:#2f2f2f;"> h(x)= 1/ (1 + e^ -x) </span><span style="color:#2f2f2f;">得到的。然后使用一个阈值强制地让输出结果变成一个二元分类问题。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">分类和回归树（</span><span style="color:#2f2f2f;">CART</span><span style="color:#2f2f2f;">）是决策树的一种补充。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">非终端节点（</span><span style="color:#2f2f2f;">non-terminal node</span><span style="color:#2f2f2f;">）包含根节点</span><span style="color:#2f2f2f;"> (root node) </span><span style="color:#2f2f2f;">和中间节点</span><span style="color:#2f2f2f;"> (internal node)</span><span style="color:#2f2f2f;">。每一个非终端节点代表一个单独的输入变量</span><span style="color:#2f2f2f;"> x </span><span style="color:#2f2f2f;">和这个变量的分支节点；叶节点代表的是输出变量</span><span style="color:#2f2f2f;"> y</span><span style="color:#2f2f2f;">。这个模型按照以下的规则来作出预测：</span></p> <p style="margin-left:0cm;"><img fetchpriority="high" decoding="async" alt="" class="has" height="606" src="http://img.555519.xyz/uploads/20230119/f54ec9ab9430bdb7116ca18e1c2ecb30.jpg"></p> <p style="margin-left:0cm;"><span style="color:#757575;">决策树的一些部分</span></p> <p style="margin-left:0cm;">&nbsp;</p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">在给定一个早已发生的事件的概率时，我们用贝叶斯定理去计算某个事件将会发生的概率。在给定一些变量的值时，我们也用贝叶斯定理去计算某个结果的概率，也就是说，基于我们的先验知识（</span><span style="color:#2f2f2f;">d</span><span style="color:#2f2f2f;">）去计算某个假设（</span><span style="color:#2f2f2f;">h</span><span style="color:#2f2f2f;">）为真的概率。计算方法如下：</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">P(h|d)= (P(d|h) * P(h)) / P(d)</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">其中，</span></p> <ul> <li> <span style="color:#262626;">P(h|d) = </span><span style="color:#262626;">后验概率。就是假设</span><span style="color:#262626;"> h </span><span style="color:#262626;">为真概率，给定的数据相当于先验知识</span><span style="color:#262626;"> d</span><span style="color:#262626;">。其中</span><span style="color:#262626;"> P(h|d)= P(d1| h)* P(d2| h)*….*P(dn| h)* P(d)</span><span style="color:#262626;">。</span> </li> <li> <span style="color:#262626;">P(d|h) = </span><span style="color:#262626;">似然度。假设</span><span style="color:#262626;"> h </span><span style="color:#262626;">正确时，数据</span><span style="color:#262626;"> d </span><span style="color:#262626;">的概率。</span> </li> <li> <span style="color:#262626;">P(h) = </span><span style="color:#262626;">类先验概率。假设</span><span style="color:#262626;"> h </span><span style="color:#262626;">正确的额概率。</span><span style="color:#262626;">(</span><span style="color:#262626;">无关数据</span><span style="color:#262626;">)</span> </li> <li> <span style="color:#262626;">P(d) = </span><span style="color:#262626;">预测器先验概率。数据的概率（无关假设</span><span style="color:#262626;">)</span> </li> </ul> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">这个算法被称为「朴素」的原因是：它假设所有的变量是相互独立的，这也是现实世界中做出的一个朴素的假设。</span></p> <p style="margin-left:0cm;"><img decoding="async" alt="" class="has" height="1200" src="http://img.555519.xyz/uploads/20230119/5bdd626b58837c708106eeb62531173f.jpg"></p> <p style="margin-left:0cm;"><span style="color:#757575;">使用朴素贝叶斯法来预测变量「天气」变化状态</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">以上图为例，如果天气</span><span style="color:#2f2f2f;">=</span><span style="color:#2f2f2f;">晴天，那么输出是什么呢？</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">在给定变量天气</span><span style="color:#2f2f2f;">=</span><span style="color:#2f2f2f;">晴天时，为了判断结果是或者否，就要计算</span><span style="color:#2f2f2f;"> P(yes|sunny) </span><span style="color:#2f2f2f;">和</span><span style="color:#2f2f2f;"> P(no|sunny)</span><span style="color:#2f2f2f;">，然后选择概率较大的结果。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">计算过程如下：</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">-&gt;P(yes|sunny)= (P(sunny|yes) * P(yes)) / P(sunny) = (3/9 * 9/14 ) / (5/14) = 0.60 -&gt; P(no|sunny)= (P(sunny|no) * P(no)) / P(sunny) = (2/5 * 5/14 ) / (5/14) =&nbsp;0.40</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">所以，天气</span><span style="color:#2f2f2f;">=</span><span style="color:#2f2f2f;">晴天时，结果为是。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">KNN </span><span style="color:#2f2f2f;">使用了整个数据集作为训练集，而不是将它分为训练集和测试集。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">当给定的一个数据实例时，</span><span style="color:#2f2f2f;">KNN </span><span style="color:#2f2f2f;">算法会在整个数据集中寻找</span><span style="color:#2f2f2f;"> k </span><span style="color:#2f2f2f;">个与其新样本距离最近的，或者</span><span style="color:#2f2f2f;"> k </span><span style="color:#2f2f2f;">个与新样本最相似的，然后，对于回归问题，输出结果的平均值，或者对于分类问题，输出频率最高的类。</span><span style="color:#2f2f2f;">k </span><span style="color:#2f2f2f;">的值是用户自定义的。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">样本之间的相似性是用欧氏距离或者汉明（</span><span style="color:#2f2f2f;">Hamming</span><span style="color:#2f2f2f;">）距离来计算的。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#f6360e;">非监督学习算法</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">Apriori </span><span style="color:#2f2f2f;">算法被用来在交易数据库中进行挖掘频繁的子集，然后生成关联规则。常用于市场篮子分析，分析数据库中最常同时出现的交易。通常，如果一个顾客购买了商品</span><span style="color:#2f2f2f;"> X </span><span style="color:#2f2f2f;">之后又购买了商品</span><span style="color:#2f2f2f;"> Y</span><span style="color:#2f2f2f;">，那么这个关联规则就可以写为：</span><span style="color:#2f2f2f;">X -&gt; Y</span><span style="color:#2f2f2f;">。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">例如：如果一位顾客购买了牛奶和甜糖，那他很有可能还会购买咖啡粉。这个可以写成这样的关联规则：</span><span style="color:#2f2f2f;"> {<!-- --></span><span style="color:#2f2f2f;">牛奶，甜糖</span><span style="color:#2f2f2f;">} -&gt; </span><span style="color:#2f2f2f;">咖啡粉。关联规则是交叉了支持度（</span><span style="color:#2f2f2f;">support</span><span style="color:#2f2f2f;">）和置信度（</span><span style="color:#2f2f2f;">confidence</span><span style="color:#2f2f2f;">）的阈值之后产生的。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">支持度的程度帮助修改在频繁的项目集中用来作为候选项目集的数量。这种支持度的衡量是由</span><span style="color:#2f2f2f;"> Apriori </span><span style="color:#2f2f2f;">原则来指导的。</span><span style="color:#2f2f2f;">Apriori </span><span style="color:#2f2f2f;">原则说明：如果一个项目集是频繁的，那么它的所有子集都是频繁的。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">K-</span><span style="color:#2f2f2f;">均值是一个对相似的数据进行聚类的迭代算法。它计算出</span><span style="color:#2f2f2f;"> k </span><span style="color:#2f2f2f;">个聚类的中心点，并给某个类的聚类分配一个与其中心点距离最近的数据点。</span></p> <p style="margin-left:0cm;"><img decoding="async" alt="" class="has" height="482" src="http://img.555519.xyz/uploads/20230119/69a37df6187d6424f661c215e8277b92.jpg"></p> <p style="margin-left:0cm;"><span style="color:#757575;">K-</span><span style="color:#757575;">均值算法的步骤</span></p> <p style="margin-left:0cm;">&nbsp;</p> <p style="margin-left:0cm;"><strong><span style="color:#2f2f2f;">步骤</span></strong><strong><span style="color:#2f2f2f;"> 1</span></strong><strong><span style="color:#2f2f2f;">：</span></strong><strong><span style="color:#2f2f2f;">K-</span></strong><strong><span style="color:#2f2f2f;">均值初始化</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">a) </span><span style="color:#2f2f2f;">选择一个</span><span style="color:#2f2f2f;"> k </span><span style="color:#2f2f2f;">值。这里我们令</span><span style="color:#2f2f2f;"> k=3</span><span style="color:#2f2f2f;">。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">b) </span><span style="color:#2f2f2f;">将数据点随机地分配给三个聚类。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">c) </span><span style="color:#2f2f2f;">计算出每个聚类的中心点。图中的红色、蓝色和绿色的星分别代表三个聚类的中心点。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#2f2f2f;">步骤</span></strong><strong><span style="color:#2f2f2f;"> 2</span></strong><strong><span style="color:#2f2f2f;">：将每一个观测值与一个聚类关联起来</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">将每一个数据点重新分配给离它最近的一个聚类中心点。如图所示，上边的五个数据点被分配给了蓝星代表的聚类。按照相同的步骤将数据点分配给红色和绿色星代表的聚类中心点。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#2f2f2f;">步骤</span></strong><strong><span style="color:#2f2f2f;"> 3</span></strong><strong><span style="color:#2f2f2f;">：重新计算中心点</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">计算新聚类的中心点。如图所示，旧中心点是灰色的，新中心点是红色、蓝色和绿色的。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#2f2f2f;">步骤</span></strong><strong><span style="color:#2f2f2f;"> 4</span></strong><strong><span style="color:#2f2f2f;">：迭代，然后在数据点所属的聚类不变的时候退出整个过程</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">重复步骤</span><span style="color:#2f2f2f;"> 2-3</span><span style="color:#2f2f2f;">，直至每一个聚类中的点不会被重新分配到另一个聚类中。如果在两个连续的步骤中不再发生变化，那么就退出</span><span style="color:#2f2f2f;"> K-</span><span style="color:#2f2f2f;">均值算法。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">主成分分析（</span><span style="color:#2f2f2f;">PCA</span><span style="color:#2f2f2f;">）通过减少变量的数目来使数据变得更加易于探索和可视化。这通过将数据中拥有最大方差的数据抽取到一个被称为「主成分」的新坐标系中。每一个成分都是原始变量的一个新的线性组合，且是两两统计独立的。统计独立意味着这些成分的相关系数是</span><span style="color:#2f2f2f;"> 0</span><span style="color:#2f2f2f;">。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">第一主成分捕获的是数据中最大方差的数据。第二主成分捕获的是剩下的数据中方差最大但是与第一主成分相互独立的数据。相似地，后续的主成分（例如</span><span style="color:#2f2f2f;"> PC3</span><span style="color:#2f2f2f;">、</span><span style="color:#2f2f2f;">PC4</span><span style="color:#2f2f2f;">）都是剩下的数据中方差最大的但是与之前的主成分保持独立的数据</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">集成意味着通过投票或者取平均值的方式，将多个学习器（分类器）结合起来以改善结果。在分类的时候进行投票，在回归的时候求平均值。核心思想就是集成多个学习器以使性能优于单个学习器。有三种集成学习的方法：装袋（</span><span style="color:#2f2f2f;">Bagging</span><span style="color:#2f2f2f;">）、提升（</span><span style="color:#2f2f2f;">Boosting</span><span style="color:#2f2f2f;">）和堆叠（</span><span style="color:#2f2f2f;">Stacking</span><span style="color:#2f2f2f;">）。本文不涉及堆叠。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">随机森林（多个学习器）是在装袋决策树（单个学习器）上做的改进。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">Bagging</span><span style="color:#2f2f2f;">：</span><span style="color:#2f2f2f;">Bagging </span><span style="color:#2f2f2f;">的第一步就是在使用</span><span style="color:#2f2f2f;"> Bootstrap </span><span style="color:#2f2f2f;">采样方法得到的数据库中创建多个模型，每个生成的训练集都是原始数据集的子集。每个训练集都有相同的大小，但是有些样本重复出现了很多次，有些样本一次未出现。然后，整个原始数据集被用为测试集。那么，如果原始数据集的大小为</span><span style="color:#2f2f2f;"> N</span><span style="color:#2f2f2f;">，则每个生成的训练集的大小也是</span><span style="color:#2f2f2f;"> N</span><span style="color:#2f2f2f;">，唯一（没有重复）样本的大小大约是</span><span style="color:#2f2f2f;"> 2*N/3</span><span style="color:#2f2f2f;">；测试集的大小也是</span><span style="color:#2f2f2f;"> N</span><span style="color:#2f2f2f;">。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">Bagging </span><span style="color:#2f2f2f;">的第二步就是使用同一个算法在不同的数据集上生成多个模型。然后，我们讨论一下随机森林。在决策树中，每个节点都在最好的、能够最小化误差的最佳特征上进行分支，而随机森林与之不同，我们选择随机分支的特征来构建最佳的分支。进行随机处理的原因在于：即便使用了</span><span style="color:#2f2f2f;"> Bagging</span><span style="color:#2f2f2f;">，当决策树选择最佳特征来分支的时候，它们最终会有相似的模型和相关联的预测结果。但是用随机子集上的特征进行分支意味着子树做的预测是没有多少相关性的。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">a</span><span style="color:#2f2f2f;">）</span><span style="color:#2f2f2f;">Bagging </span><span style="color:#2f2f2f;">是并行集成，因为每个模型都是独立建立的。然而，提升是一个顺序性集成，每个模型都要纠正前面模型的错误分类。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">b</span><span style="color:#2f2f2f;">）</span><span style="color:#2f2f2f;">Bagging </span><span style="color:#2f2f2f;">主要涉及到「简单投票」，每个分类器都投票得到一个最终结果，这个分类结果是由并行模型中的大多数模型做出的；提升则使用「权重投票」。每个分类器都会投票得到一个由大多数模型做出的结果</span><span style="color:#2f2f2f;">—</span><span style="color:#2f2f2f;">但是建立这些顺序性模型的时候，给之前误分类样本的模型赋予了较大的权重。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">Adaboost </span><span style="color:#2f2f2f;">指的是适应性提升。</span></p> <p style="margin-left:0cm;"><img loading="lazy" decoding="async" alt="" class="has" height="554" src="http://img.555519.xyz/uploads/20230119/537b5356659f287ec474a54a9c03ff55.jpg"></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">一个决策树的</span><span style="color:#2f2f2f;"> Adaboost</span></p> <p style="margin-left:0cm;">&nbsp;</p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">在上图</span> <span style="color:#2f2f2f;">中，步骤</span><span style="color:#2f2f2f;"> 1</span><span style="color:#2f2f2f;">、</span><span style="color:#2f2f2f;">2</span><span style="color:#2f2f2f;">、</span><span style="color:#2f2f2f;">3 </span><span style="color:#2f2f2f;">指的是被称为决策桩（</span><span style="color:#2f2f2f;">decision stump</span><span style="color:#2f2f2f;">）的弱学习器（是一个仅依靠一个输入作出决策的</span><span style="color:#2f2f2f;"> 1 </span><span style="color:#2f2f2f;">级决策树；是一种根节点直接连接到叶节点的决策树）。构造决策树的过程会一直持续，直到用户定义了一个弱学习器的数目，或者训练的时候再也没有任何提升的时候。步骤</span><span style="color:#2f2f2f;"> 4 </span><span style="color:#2f2f2f;">结合了之前模型中的</span><span style="color:#2f2f2f;"> 3 </span><span style="color:#2f2f2f;">个决策桩（所以在这个决策树中就有</span><span style="color:#2f2f2f;"> 3 </span><span style="color:#2f2f2f;">种分支规则）。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#2f2f2f;">步骤</span></strong><strong><span style="color:#2f2f2f;"> 1</span></strong><strong><span style="color:#2f2f2f;">：开始用</span></strong><strong><span style="color:#2f2f2f;"> 1 </span></strong><strong><span style="color:#2f2f2f;">个决策桩来根据</span></strong><strong><span style="color:#2f2f2f;"> 1 </span></strong><strong><span style="color:#2f2f2f;">个输入变量做决策</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">数据点的大小说明我们应用了等权重来将它们分为圆形或者三角形。决策桩在图的上半部分用一条水平线来对这些点进行分类。我们可以看到，有两个圆被误分为三角形。所以，我们会赋予这两个圆更大的权重，然后使用另一个决策桩（</span><span style="color:#2f2f2f;">decision stump</span><span style="color:#2f2f2f;">）。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#2f2f2f;">步骤</span></strong><strong><span style="color:#2f2f2f;"> 2</span></strong><strong><span style="color:#2f2f2f;">：转向下一个决策桩，对另一个输入变量进行决策</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">我们可以看到，之前的步骤中误分类的两个圆要比其余数据点大。现在，第二个决策桩要尝试正确地预测这两个圆。</span></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">赋予更大权重的结果就是，这两个圆被左边的竖线正确地分类了。但是这又导致了对上面</span><span style="color:#2f2f2f;"> 3 </span><span style="color:#2f2f2f;">个小圆的误分类。因此，我们要在另一个决策桩对这三个圆赋予更大的权重。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#2f2f2f;">步骤</span></strong><strong><span style="color:#2f2f2f;"> 3</span></strong><strong><span style="color:#2f2f2f;">：训练另一个决策桩对下一个输入变量进行决策。</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">上一步误分类的</span><span style="color:#2f2f2f;"> 3 </span><span style="color:#2f2f2f;">个圆要比其他的数据点大。现在，在右边生成了一条竖线，对三角形和圆进行分类。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#2f2f2f;">步骤</span></strong><strong><span style="color:#2f2f2f;"> 4</span></strong><strong><span style="color:#2f2f2f;">：结合决策桩</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">我们结合了之前</span><span style="color:#2f2f2f;"> 3 </span><span style="color:#2f2f2f;">步的决策桩，然后发现一个复杂的规则将数据点正确地分类了，性能要优于任何一个弱学习器。</span></p> <p style="margin-left:0cm;"><strong><span style="color:#f6360e;">结语</span></strong></p> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">回顾一下，本文主要学到的内容：</span></p> <ol> <li> <span style="color:#262626;">&nbsp;5 </span><span style="color:#262626;">种监督学习技术：线性回归、</span><span style="color:#262626;">Logistic </span><span style="color:#262626;">回归、</span><span style="color:#262626;">CART</span><span style="color:#262626;">（分类和决策树）、朴素贝叶斯法和</span><span style="color:#262626;"> KNN</span><span style="color:#262626;">。</span> </li> <li> <span style="color:#262626;">3 </span><span style="color:#262626;">种非监督学习技术：</span><span style="color:#262626;">Apriori </span><span style="color:#262626;">算法、</span><span style="color:#262626;">K-</span><span style="color:#262626;">均值聚类、主成分分析（</span><span style="color:#262626;">PCA</span><span style="color:#262626;">）。</span> </li> <li> <span style="color:#262626;">两种集成学习方法：</span><span style="color:#262626;">Bagging </span><span style="color:#262626;">随机森林、</span><span style="color:#262626;">AdaBoost </span><span style="color:#262626;">提升。</span> </li> </ol> <p style="margin-left:0cm;"><span style="color:#2f2f2f;">综上所述，机器学习的基本属性可以总结为以下：</span><span style="color:#2f2f2f;">s</span></p> <ul> <li><span style="color:#262626;">机器学习是（使用样本获取近似函数的）统计学的一个分支。我们有一个确实存在的理论函数或分布用以生成数据，但我们目前不知道它是什么。我们可以对这个函数进行抽样，这些样本选自我们的训练集。</span></li> <li> <span style="color:#262626;">以图片描述任务为例：函数：</span><span style="color:#262626;">f</span><span style="color:#262626;">⋆</span><span style="color:#262626;">（图片）</span><span style="color:#262626;">→</span><span style="color:#262626;">图片描述，样本：</span><span style="color:#262626;">data</span><span style="color:#262626;">∈</span><span style="color:#262626;">（</span><span style="color:#262626;">image</span><span style="color:#262626;">，</span><span style="color:#262626;">description</span><span style="color:#262626;">）。注意：由于一个物体有许多有效的描述，所以描述是文本空间中的一个分布：图片描述</span><span style="color:#262626;">〜</span><span style="color:#262626;">文本。</span> </li> </ul> <p style="margin-left:0cm;"><span style="color:#262626;">机器的目标是找到模型：有足够的表现力来逼近真正的函数，找到一个高效的算法，它使用训练数据找到函数最优解。而且此最优解必须对未知输入有良好的泛化能力。</span></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-31975.htm">动物疫苗排名前十位有哪些品种 动物疫苗排名前十位有哪些品种图片</a></p>
                                        <p>下一个：<a href="/news/article-32455.htm">成都兽用疫苗公司 成都兽用疫苗公司有哪些</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-10-14-clash-node-daily-updates.htm" title="「10月14日」最高速度18.3M/S，2024年Shadowrocket/Clash/SSR/V2ray每天更新免费节点订阅链接">「10月14日」最高速度18.3M/S，2024年Shadowrocket/Clash/SSR/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-24950.htm" title="宠物美容工资多少钱一个月（宠物美容师基本工资）">宠物美容工资多少钱一个月（宠物美容师基本工资）</a></li>
                        <li class="py-2"><a href="/news/article-24019.htm" title="叫猫过来的手势（叫猫过来的手势 视频）">叫猫过来的手势（叫猫过来的手势 视频）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-26-today-clash-node.htm" title="「7月26日」最高速度21.3M/S，2024年V2ray/SSR/Shadowrocket/Clash每天更新免费节点订阅链接">「7月26日」最高速度21.3M/S，2024年V2ray/SSR/Shadowrocket/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-24243.htm" title="Redis如何无锁应对并发访问及如何实现分布式锁">Redis如何无锁应对并发访问及如何实现分布式锁</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-2-node-share-links.htm" title="「9月2日」最高速度19.8M/S，2024年Shadowrocket/V2ray/SSR/Clash每天更新免费节点订阅链接">「9月2日」最高速度19.8M/S，2024年Shadowrocket/V2ray/SSR/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-27746.htm" title="北京农大动物医院好么啊（北京农大动物医院公众号）">北京农大动物医院好么啊（北京农大动物医院公众号）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-7-today-clash-node.htm" title="「8月7日」最高速度20.8M/S，2024年SSR/Shadowrocket/V2ray/Clash每天更新免费节点订阅链接">「8月7日」最高速度20.8M/S，2024年SSR/Shadowrocket/V2ray/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-9-clash-node-github.htm" title="「9月9日」最高速度18.8M/S，2024年SSR/Shadowrocket/Clash/V2ray每天更新免费节点订阅链接">「9月9日」最高速度18.8M/S，2024年SSR/Shadowrocket/Clash/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-23-windows-clash-node.htm" title="「8月23日」最高速度21.2M/S，2024年Shadowrocket/SSR/Clash/V2ray每天更新免费节点订阅链接">「8月23日」最高速度21.2M/S，2024年Shadowrocket/SSR/Clash/V2ray每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">22</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- ========================= about style-3 end ========================= -->
        <footer class="footer footer-style-1">
        <div class="container">
            <div class="copyright-wrapper wow fadeInUp" data-wow-delay=".2s">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <p>MyClash官网每日更新站 版权所有 Powered by WordPress</p>
            </div>
        </div>
    </footer>
    <!-- ========================= footer style-1 end ========================= -->
    <!-- ========================= scroll-top start ========================= -->
    <a href="#" class="scroll-top"> <i class="lni lni-chevron-up"></i> </a>
    <!-- ========================= scroll-top end ========================= -->
    <!-- ========================= JS here ========================= -->
    <script src="/assets/website/js/frontend/myclash/jquery-3.4.1.min.js"></script>
    <script src="/assets/website/js/frontend/myclash/bootstrap.5.0.0.alpha-2-min.js"></script>
    <script src="/assets/website/js/frontend/myclash/contact-form.js"></script>
    <script src="/assets/website/js/frontend/myclash/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/myclash/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/myclash/imagesloaded.min.js"></script>
    <script src="/assets/website/js/frontend/myclash/isotope.min.js"></script>
    <script src="/assets/website/js/frontend/myclash/count-up.min.js"></script>
    <script src="/assets/website/js/frontend/myclash/wow.min.js"></script>
    <script src="/assets/website/js/frontend/myclash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>